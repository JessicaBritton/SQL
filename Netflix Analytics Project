In this SQL code, I'm querying a database that's holding Netflix data to answer questions about the data. We are also using the PostgreSQL dialect.

--#1.How many movie titles are there in the database? (movies only, not tv shows)
SELECT 
  COUNT(*) 
FROM 
  "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE 
  TYPE = 'Movie';

--#1a.How many TV Show titles are there in the database? (TV Show's only, not movies)
SELECT 
  COUNT(*) 
FROM 
  "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE 
  TYPE = 'TV Show';

--2.When was the most recent batch of tv shows and/or movies added to the database?
SELECT 
  MAX(DATE(DATE_ADDED))
FROM 
  "CharlotteChaze/BreakIntoTech"."netflix_titles_info";

--#3.List all the movies and tv shows in alphabetical order.
SELECT 
  TITLE
FROM 
  "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
ORDER BY 
  TITLE ASC;

--#4. Who was the Director for the movie Bright Star?
SELECT 
  DIRECTOR
FROM 
  "CharlotteChaze/BreakIntoTech"."netflix_titles_info" AS TITLES
LEFT JOIN 
  "CharlotteChaze/BreakIntoTech"."netflix_people" AS PEOPLE
  ON TITLES.SHOW_ID = PEOPLE.SHOW_ID
WHERE 
  TITLES.TITLE = 'Bright Star';

--#5.What is the oldest movie in the database and what year was it made?
SELECT 
  TITLE,
  RELEASE_YEAR
FROM 
  "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE 
  TYPE = 'Movie'
ORDER BY 
  RELEASE_YEAR ASC
LIMIT 2;

--#5a. Make a subquery for the one before to see all the oldest movies.
SELECT 
  TITLE,
  RELEASE_YEAR
FROM 
  "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE 
  TYPE = 'Movie'
AND 
  RELEASE_YEAR <= 
  (SELECT 
    MIN(RELEASE_YEAR) 
  FROM 
    "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
  WHERE 
    TYPE = 'Movie')
;
